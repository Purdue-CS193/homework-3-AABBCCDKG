Q1: What are the 3 commands to transfer something from your local codebase to GitHub?
git add . // stage all the changes
git commit -m <"label for the updated content"> //commit the changes with a message
git push // push the changes to the remote repository on GitHub

Q2: What does 'git clone' do? 
clone a repository from GitHub (or another remote repository) into a new directory on my local computer

Q3: What does 'git status' do?
Showing the state of the working directory and the staging area. What have been staged, what haven't.

Q4: What does "Your branch is up to date with 'origin/master'" tell you?
My local branch is synchronized with the branch named 'master' on the remote repository which is referred to as 'origin'.

Q5: You’ve made a change to a file in GitHub, the one on the browser, and now you run 'git status' on the terminal. It still says "Up to Date" despite the change. What command do you need to enter first?
git fetch //clone new info from remote repository
get pull //integrate the downloaded new info to the branch in my local computer

Q6: You’ve just ran the 'rm' command and deleted an important file. All your code is deleted, not including the local repository. You only ran 'git add' and 'git commit' before the rogue command. Is your code saved?
Yes. Since I've already run 'git add' + 'git commit', the changes are stored in my local repository.

Q7: Your computer crashes and all your code is deleted, including the local repository. You only ran 'git add' and 'git commit'. Is your code saved?
No. Since I didn't run 'git push', the code were only saved in my local repository. So if my local repository crashes, I can not recover my code anymore.

